#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MARKER='\033[1m[PACKMAN]\033[0m'
cd "$DIR" || exit 1
mkdir -p ~/rpm/ 

# Detect yum
if command -v yum >/dev/null 2>&1; then
    MODE="yum"
else
    echo -e "$MARKER Could not find yum installed on this machine..."
    exit 1
fi

# Ensure dnf exists for downloading
if ! command -v dnf >/dev/null 2>&1; then
    echo -e "$MARKER Could not find dnf installed on this machine (needed for downloads)."
    exit 1
fi
case $1 in
    search)
        shift
        echo -e "$MARKER Searching for: $*"
        yum search "$@"
        ;;
    install)
        shift
        for package in "$@"; do
            echo -e "$MARKER Installing (extracting) $package..."
            cd ~/rpm || exit 1
            dnf download "$package"
            mkdir -p ~/rpm/.packman
            touch ~/rpm/.packman/$package.files
            rpm2cpio *.rpm | cpio -idmv
            find ~/rpm/usr ~/rpm/etc ~/rpm/lib ~/rpm/bin ~/rpm/share -type f -o -type l 2>/dev/null \
                | sed 's|^||' \
                | tee ~/rpm/.packman/$package.files
            cd ..
        done
        ;;

   uninstall)
    shift
    for package in "$@"; do
        FILELIST=~/rpm/.packman/$package.files
        PKGDIR=~/rpm

        if [ ! -f "$FILELIST" ]; then
            echo -e "$MARKER No record of $package being installed."
            continue
        fi

        echo -e "$MARKER Uninstalling $package..."

        # Loop through each file recorded for this package
        while read -r file; do
            if [[ "$file" == *"$package"* ]] && [ -f "$file" ]; then
                echo "$MARKER Removing $file"
                rm -f "$file"

                # Attempt to clean up empty parent directories up to PKGDIR
                dir=$(dirname "$file")
                while [ "$dir" != "$PKGDIR" ] && [ "$dir" != "/" ]; do
                    rmdir --ignore-fail-on-non-empty "$dir" 2>/dev/null || true
                    dir=$(dirname "$dir")
                done
            fi
        done < "$FILELIST"

        # Remove any RPM files matching the package name
        rm -f "$PKGDIR"/*"$package"*.rpm

        # Remove the file list record
        rm -f "$FILELIST"

        echo -e "$MARKER $package fully removed."
    done
    ;;

   list)
    PACKDIR=~/rpm/.packman
    FILES=("$PACKDIR"/*.files)

    # Check if any packages exist
    if [ ! -e "${FILES[0]}" ]; then
        echo -e "$MARKER No packages have been installed."
        break  # or exit depending on your script
    fi

    # Print numbered list of installed packages
    count=1
    for file in "${FILES[@]}"; do
        pkg=$(basename "$file" .files)  # remove path and .files extension
        echo "$count. $pkg"
        ((count++))
    done
    ;;

  global)
    BASHRC_FILE="bashrc"
    TARGET_BASHRC="$HOME/.bashrc"

    if [ -f "$BASHRC_FILE" ]; then
        echo "Installing bashrc..."
        # Backup once
        if [ -f "$TARGET_BASHRC" ]; then
            cp "$TARGET_BASHRC" "$TARGET_BASHRC.backup.$(date +%s)"
            echo "Existing .bashrc backed up."
        fi

        # Append only if not already added
        if ! grep -q "### PACKMAN START ###" "$TARGET_BASHRC"; then
            cat >> "$TARGET_BASHRC" <<EOF
### PACKMAN START ###
if [ -f "$HOME/packman/bashrc" ]; then
    source "$HOME/packman/bashrc"
fi
### PACKMAN END ###
EOF
            echo "Packman bashrc added."
        fi
    else
        echo "No bashrc found in repo."
    fi

    echo "Installation complete! You will be prompted to login again to apply the changes"
    source "$HOME/.bashrc"
    bash --login
;;

    get)
        shift
        for package in "$@"; do
            echo -e "$MARKER Getting $package..."
            cd rpm || exit 1
            dnf download "$package"
            cd ..
        done
        ;;
    *)
        echo -e "$MARKER Unknown instruction $1"
        ;;
esac
